/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockedUSDT,
  MockedUSDTInterface,
} from "../../../../contracts/ExternalContracts/MockedUSDT.sol/MockedUSDT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "parent",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20DeployToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109b83803806109b883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610925806100936000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461013257806395d89b4114610145578063a4c1aca41461014d578063a9059cbb14610157578063c634d0321461016a578063dd62ed3e1461017d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610105578063313ce56714610118575b600080fd5b6100b6610190565b6040516100c391906106d4565b60405180910390f35b6100df6100da366004610723565b610206565b60405190151581526020016100c3565b6100f761028a565b6040519081526020016100c3565b6100df61011336600461074d565b610302565b61012061038f565b60405160ff90911681526020016100c3565b6100f7610140366004610789565b610407565b6100b661047c565b6101556104c5565b005b6100df610165366004610723565b610562565b6101556101783660046107a4565b6105c5565b6100f761018b3660046107bd565b610632565b6000805460408051635c16eccd60e11b815290516060936001600160a01b039093169263b82dd99a92600480820193918290030181865afa1580156101d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102019190810190610806565b905090565b600080546001600160a01b031663ace561a8336040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908616602482015260448101859052606401600060405180830381600087803b15801561026957600080fd5b505af115801561027d573d6000803e3d6000fd5b5060019695505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b03166389fb4c666040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020191906108b3565b600080546001600160a01b031663df777835336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201528188166024820152908616604482015260648101859052608401600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b506001979650505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633cb5d3796040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020191906108cc565b600080546040516302519da360e01b81526001600160a01b038481166004830152909116906302519da390602401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906108b3565b92915050565b6000805460408051633b46cc3160e21b815290516060936001600160a01b039093169263ed1b30c492600480820193918290030181865afa1580156101d9573d6000803e3d6000fd5b6000546040516310a9e0f160e11b815260606004820152600a606482015269135bd8dad9591554d11560b21b608482015260a06024820152600560a4820152641b5554d11560da1b60c4820152600660448201526001600160a01b0390911690632153c1e29060e401600060405180830381600087803b15801561054857600080fd5b505af115801561055c573d6000803e3d6000fd5b50505050565b6000803360005460405163df77783560e01b81526001600160a01b0380841660048301819052602483015287811660448301526064820187905292935091169063df77783590608401600060405180830381600087803b15801561036d57600080fd5b6000546040516335f6196d60e11b8152306004820152336024820152604481018390526001600160a01b0390911690636bec32da90606401600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b5050505050565b6000805460405163dbb1039560e01b81526001600160a01b03858116600483015284811660248301529091169063dbb1039590604401602060405180830381865afa158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a991906108b3565b9392505050565b60005b838110156106cb5781810151838201526020016106b3565b50506000910152565b60208152600082518060208401526106f38160408501602087016106b0565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461071e57600080fd5b919050565b6000806040838503121561073657600080fd5b61073f83610707565b946020939093013593505050565b60008060006060848603121561076257600080fd5b61076b84610707565b925061077960208501610707565b9150604084013590509250925092565b60006020828403121561079b57600080fd5b6106a982610707565b6000602082840312156107b657600080fd5b5035919050565b600080604083850312156107d057600080fd5b6107d983610707565b91506107e760208401610707565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561081857600080fd5b815167ffffffffffffffff8082111561083057600080fd5b818401915084601f83011261084457600080fd5b815181811115610856576108566107f0565b604051601f8201601f19908116603f0116810190838211818310171561087e5761087e6107f0565b8160405282815287602084870101111561089757600080fd5b6108a88360208301602088016106b0565b979650505050505050565b6000602082840312156108c557600080fd5b5051919050565b6000602082840312156108de57600080fd5b815160ff811681146106a957600080fdfea264697066735822122075d3aa2f0c6cce61799c73b85bc2a01a6f45d485c7edde70a20b29c52e5229fa64736f6c63430008140033";

type MockedUSDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockedUSDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockedUSDT__factory extends ContractFactory {
  constructor(...args: MockedUSDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    parent: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(parent, overrides || {});
  }
  override deploy(
    parent: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(parent, overrides || {}) as Promise<
      MockedUSDT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockedUSDT__factory {
    return super.connect(runner) as MockedUSDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockedUSDTInterface {
    return new Interface(_abi) as MockedUSDTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockedUSDT {
    return new Contract(address, _abi, runner) as unknown as MockedUSDT;
  }
}
