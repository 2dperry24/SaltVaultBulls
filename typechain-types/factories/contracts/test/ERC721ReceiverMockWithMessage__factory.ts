/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721ReceiverMockWithMessage,
  ERC721ReceiverMockWithMessageInterface,
} from "../../../contracts/test/ERC721ReceiverMockWithMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "retval",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "reverts",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161037e38038061037e83398101604081905261002f91610059565b600080549115156401000000000264ffffffffff1990921660e09390931c929092171790556100a5565b6000806040838503121561006c57600080fd5b82516001600160e01b03198116811461008457600080fd5b6020840151909250801515811461009a57600080fd5b809150509250929050565b6102ca806100b46000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e366004610140565b610060565b6040516001600160e01b0319909116815260200160405180910390f35b60008054640100000000900460ff16156100c05760405162461bcd60e51b815260206004820152601d60248201527f45524337323152656365697665724d6f636b3a20726576657274696e67000000604482015260640160405180910390fd5b7f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b038858585855a6040516100f795949392919061021c565b60405180910390a15060005460e01b949350505050565b80356001600160a01b038116811461012557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561015657600080fd5b61015f8561010e565b935061016d6020860161010e565b925060408501359150606085013567ffffffffffffffff8082111561019157600080fd5b818701915087601f8301126101a557600080fd5b8135818111156101b7576101b761012a565b604051601f8201601f19908116603f011681019083821181831017156101df576101df61012a565b816040528281528a60208487010111156101f857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060018060a01b03808816835260208188168185015286604085015260a06060850152855191508160a085015260005b828110156102695786810182015185820160c00152810161024d565b5050600060c0828501015260c0601f19601f830116840101915050826080830152969550505050505056fea2646970667358221220f0d8d261876cb10c3f5be126e5b3b0b2c709f05570c4d0f309c647b24183939d64736f6c63430008140033";

type ERC721ReceiverMockWithMessageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ReceiverMockWithMessageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ReceiverMockWithMessage__factory extends ContractFactory {
  constructor(...args: ERC721ReceiverMockWithMessageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    retval: BytesLike,
    reverts: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(retval, reverts, overrides || {});
  }
  override deploy(
    retval: BytesLike,
    reverts: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(retval, reverts, overrides || {}) as Promise<
      ERC721ReceiverMockWithMessage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC721ReceiverMockWithMessage__factory {
    return super.connect(runner) as ERC721ReceiverMockWithMessage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ReceiverMockWithMessageInterface {
    return new Interface(_abi) as ERC721ReceiverMockWithMessageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721ReceiverMockWithMessage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC721ReceiverMockWithMessage;
  }
}
