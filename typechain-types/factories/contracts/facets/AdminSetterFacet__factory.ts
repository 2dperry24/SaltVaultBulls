/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AdminSetterFacet,
  AdminSetterFacetInterface,
} from "../../../contracts/facets/AdminSetterFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcTokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_coreTeamWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltiesWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_procurementWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gemTokenBurnWallet",
        type: "address",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizeAdminForGemTokenFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_externalContract",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizeExternalContractsForERC721Facet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635dd68acd14610046578063e3a723da1461005b578063f4606d211461006e575b600080fd5b6100596100543660046101f7565b610081565b005b61005961006936600461025c565b6100e8565b61005961007c36600461025c565b61011b565b61008961014e565b600080546001600160a01b03199081166001600160a01b03978816179091556002805482169587169590951790945560038054851693861693909317909255600480548416918516919091179055600580549092169216919091179055565b6100f061014e565b6001600160a01b03919091166000908152603160205260409020805460ff1916911515919091179055565b61012361014e565b6001600160a01b03919091166000908152605260205260409020805460ff1916911515919091179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146101d95760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b80356001600160a01b03811681146101f257600080fd5b919050565b600080600080600060a0868803121561020f57600080fd5b610218866101db565b9450610226602087016101db565b9350610234604087016101db565b9250610242606087016101db565b9150610250608087016101db565b90509295509295909350565b6000806040838503121561026f57600080fd5b610278836101db565b91506020830135801515811461028d57600080fd5b80915050925092905056fea26469706673582212204b9e456e4eb899b7cd40576a9edbe2666dce6a358abfae26e699e904bd1de98564736f6c63430008140033";

type AdminSetterFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminSetterFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminSetterFacet__factory extends ContractFactory {
  constructor(...args: AdminSetterFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AdminSetterFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AdminSetterFacet__factory {
    return super.connect(runner) as AdminSetterFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminSetterFacetInterface {
    return new Interface(_abi) as AdminSetterFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AdminSetterFacet {
    return new Contract(address, _abi, runner) as unknown as AdminSetterFacet;
  }
}
