/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Facet,
  ERC20FacetInterface,
} from "../../../contracts/facets/ERC20Facet";

const _abi = [
  {
    inputs: [],
    name: "ERC20InvalidInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20NotEnoughAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20NotEnoughBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ERC20NewToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ERC20Transferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "erc20Allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "erc20Approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "erc20BalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "erc20DeployToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "erc20Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c40806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ace561a811610066578063ace561a81461014e578063b82dd99a14610161578063dbb1039514610176578063df77783514610189578063ed1b30c41461019c57600080fd5b806302519da3146100a35780632153c1e2146100ec5780633cb5d379146101015780636bec32da1461012657806389fb4c6614610139575b600080fd5b6100d96100b136600461080c565b336000908152604e602090815260408083206001600160a01b03949094168352929052205490565b6040519081526020015b60405180910390f35b6100ff6100fa3660046108d1565b6101a4565b005b336000908152604d602052604090205460ff1660405160ff90911681526020016100e3565b6100ff61013436600461094f565b610286565b336000908152605060205260409020546100d9565b6100ff61015c36600461094f565b610296565b61016961030c565b6040516100e3919061098b565b6100d96101843660046109d9565b6103ad565b6100ff610197366004610a0c565b6103e4565b6101696104f2565b6101ad83610510565b15806101bf57506101bd82610510565b155b806101cb575060ff8116155b156101e957604051633241312d60e11b815260040160405180910390fd5b336000818152604b602052604090206102028582610adf565b506001600160a01b0381166000908152604c602052604090206102258482610adf565b506001600160a01b0381166000818152604d6020908152604091829020805460ff191660ff871617905590519182527fb6fd98413709798092b0b281dc2507418dfa745b9f8fbb9eb24033601e7e99b791015b60405180910390a150505050565b610291838383610613565b505050565b336000818152604f602090815260408083206001600160a01b0388811680865291845282852090881680865290845293829020869055815185815292830152810191909152606081018390527f64d4ed24bb3d6bfdd667acaeaad20f8795915514e1c67fb333b1ee94fe970d1590608001610278565b336000908152604b6020526040902080546060919061032a90610a57565b80601f016020809104026020016040519081016040528092919081815260200182805461035690610a57565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b5050505050905090565b336000908152604f602090815260408083206001600160a01b03868116855290835281842090851684529091529020545b92915050565b336001600160a01b03831661041c5760405163ec442f0560e01b81526001600160a01b03841660048201526024015b60405180910390fd5b836001600160a01b0316856001600160a01b0316146104df576001600160a01b038082166000908152604f60209081526040808320888516845282528083209389168352929052205482111561049857604051637400a2ab60e01b81526001600160a01b03808616600483015286166024820152604401610413565b6001600160a01b038082166000908152604f6020908152604080832088851684528252808320938916835292905290812080548492906104d9908490610bb5565b90915550505b6104eb818585856106c8565b5050505050565b336000908152604c6020526040902080546060919061032a90610a57565b8051600090819081905b8082101561060a57600085838151811061053657610536610bc8565b01602001516001600160f81b0319169050600160ff1b8110156105655761055e600184610bde565b92506105f7565b600760fd1b6001600160f81b0319821610156105865761055e600284610bde565b600f60fc1b6001600160f81b0319821610156105a75761055e600384610bde565b601f60fb1b6001600160f81b0319821610156105c85761055e600484610bde565b603f60fa1b6001600160f81b0319821610156105e95761055e600584610bde565b6105f4600684610bde565b92505b508261060281610bf1565b93505061051a565b50909392505050565b6001600160a01b03831660009081526050602052604081208054839190839061063d908490610bde565b90915550506001600160a01b038085166000908152604e8301602090815260408083209387168352929052908120805484929061067b908490610bde565b9091555050604080516001600160a01b038087168252851660208201529081018390527f92a7c490074dd7eee5b849cec63e14b83285b52695cbd68036b69db667852aeb90606001610278565b6001600160a01b038481166000908152604e6020908152604080832093871683529290529081205482111561071b57604051635da4200960e01b81526001600160a01b0385166004820152602401610413565b6001600160a01b038086166000908152604e83016020908152604080832093881683529290529081208054849290610754908490610bb5565b90915550506001600160a01b038086166000908152604e83016020908152604080832093871683529290529081208054849290610792908490610bde565b9091555050604080516001600160a01b03878116825286811660208301528516818301526060810184905290517f8dfac83616afc4a99a89fe63243ae807798d10eb5a1449e5472853efc3c022cf9181900360800190a15050505050565b80356001600160a01b038116811461080757600080fd5b919050565b60006020828403121561081e57600080fd5b610827826107f0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261085557600080fd5b813567ffffffffffffffff808211156108705761087061082e565b604051601f8301601f19908116603f011681019082821181831017156108985761089861082e565b816040528381528660208588010111156108b157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156108e657600080fd5b833567ffffffffffffffff808211156108fe57600080fd5b61090a87838801610844565b9450602086013591508082111561092057600080fd5b5061092d86828701610844565b925050604084013560ff8116811461094457600080fd5b809150509250925092565b60008060006060848603121561096457600080fd5b61096d846107f0565b925061097b602085016107f0565b9150604084013590509250925092565b600060208083528351808285015260005b818110156109b85785810183015185820160400152820161099c565b506000604082860101526040601f19601f8301168501019250505092915050565b600080604083850312156109ec57600080fd5b6109f5836107f0565b9150610a03602084016107f0565b90509250929050565b60008060008060808587031215610a2257600080fd5b610a2b856107f0565b9350610a39602086016107f0565b9250610a47604086016107f0565b9396929550929360600135925050565b600181811c90821680610a6b57607f821691505b602082108103610a8b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561029157600081815260208120601f850160051c81016020861015610ab85750805b601f850160051c820191505b81811015610ad757828155600101610ac4565b505050505050565b815167ffffffffffffffff811115610af957610af961082e565b610b0d81610b078454610a57565b84610a91565b602080601f831160018114610b425760008415610b2a5750858301515b600019600386901b1c1916600185901b178555610ad7565b600085815260208120601f198616915b82811015610b7157888601518255948401946001909101908401610b52565b5085821015610b8f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156103de576103de610b9f565b634e487b7160e01b600052603260045260246000fd5b808201808211156103de576103de610b9f565b600060018201610c0357610c03610b9f565b506001019056fea2646970667358221220b7d65b2d14fe08f3637a300bb3b91c579c3c554b5cee4cd93829e7df757f499464736f6c63430008140033";

type ERC20FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Facet__factory extends ContractFactory {
  constructor(...args: ERC20FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Facet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Facet__factory {
    return super.connect(runner) as ERC20Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FacetInterface {
    return new Interface(_abi) as ERC20FacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Facet {
    return new Contract(address, _abi, runner) as unknown as ERC20Facet;
  }
}
